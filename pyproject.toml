[project]
name = "scenic"
version = "3.0.0b1"
description = "The Scenic scenario description language."
authors = [
	{ name = "Daniel Fremont", email = "dfremont@ucsc.edu" },
	{ name = "Edward Kim" },
	{ name = "Tommaso Dreossi" },
	{ name = "Shromona Ghosh" },
	{ name = "Xiangyu Yue" },
	{ name = "Alberto L. Sangiovanni-Vincentelli" },
	{ name = "Sanjit A. Seshia" },
]
maintainers = [
	{ name = "Daniel Fremont", email = "dfremont@ucsc.edu" },
]
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
classifiers = [
	"Operating System :: OS Independent",
	"Development Status :: 5 - Production/Stable",
	"License :: OSI Approved :: BSD License",
	"Programming Language :: Python :: 3",
]

dependencies = [
	"antlr4-python3-runtime ~= 4.11",
	"attrs >= 19.3.0",
	"dotmap ~= 1.3",
	'importlib_metadata >= 3.7, <5; python_version < "3.8"',
	"mapbox_earcut >= 0.12.10",
	"matplotlib ~= 3.2",
	"networkx ~= 3.0",
	"numpy ~= 1.21",
	"opencv-python ~= 4.5",
	"pillow ~= 9.1",
	'pygame ~= 2.1.3.dev8; python_version >= "3.11"',
	'pygame ~= 2.0; python_version < "3.11"',
	"pyglet ~= 1.5",
	"python-fcl >= 0.7",
	"Rtree ~= 1.0",
	"rv-ltl ~= 0.1.0a1",
	"scipy ~= 1.6",
	"shapely ~= 1.7",
	"trimesh >3.21.5, <4",
]

[project.optional-dependencies]
guideways = [
	'pyproj ~= 3.0; python_version < "3.10"',
	'pyproj ~= 3.3; python_version >= "3.10"',
]
test = [	# minimum dependencies for running tests (used for tox virtualenvs)
	"pegen >= 0.2",
	"pytest >= 6.0.0, <8",
	"pytest-randomly ~= 3.2",
]
dev = [
	"scenic[test]",		# all dependencies from 'test' extra above
	"scenic[guideways]", # for running guideways modules
	"astor >= 0.8.1",
	"inflect ~= 5.5",
	"pygments ~= 2.11",
	"pytest-cov >= 3.0.0",
	"sphinx >= 5.0.0, <6",
	"sphinx_rtd_theme >= 0.5.2",
	"tox ~= 3.14",
]

[project.urls]
Repository = "https://github.com/BerkeleyLearnVerify/Scenic"
Documentation = "https://scenic-lang.readthedocs.io"

[project.scripts]
scenic = 'scenic.__main__:dummy'

[project.entry-points."pygments.lexers"]
scenic = "scenic.syntax.pygment:ScenicLexer"

[project.entry-points."pygments.styles"]
scenic = "scenic.syntax.pygment:ScenicStyle"

[build-system]
requires = ["flit_core >= 3.2, <4"]
build-backend = "flit_core.buildapi"

[tool.black]
line-length = 90
extend-exclude = '''
^/src/scenic/syntax/parser\.py
| ^/src/scenic/simulators/webots/WBT.*
| ^/tests/syntax/polychrome.*
'''
