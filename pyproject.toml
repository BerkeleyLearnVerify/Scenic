[project]
name = "scenic"
version = "3.0.0b2"
description = "The Scenic scenario description language."
authors = [
	{ name = "Daniel Fremont" },
	{ name = "Eric Vin" },
	{ name = "Shun Kashiwa" },
	{ name = "Edward Kim" },
	{ name = "Tommaso Dreossi" },
	{ name = "Shromona Ghosh" },
	{ name = "Xiangyu Yue" },
	{ name = "Alberto L. Sangiovanni-Vincentelli" },
	{ name = "Sanjit A. Seshia" },
]
maintainers = [
	{ name = "Daniel Fremont", email = "dfremont@ucsc.edu" },
]
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
classifiers = [
	"Operating System :: OS Independent",
	"Development Status :: 5 - Production/Stable",
	"License :: OSI Approved :: BSD License",
	"Programming Language :: Python :: 3",
]

[tool.poetry.dependencies]
python = "^3.6"
dotmap = "^1.3.13"
shapely = "^1.7.0"
mapbox_earcut = "^0.12.10"
matplotlib = "^3.2.1"
scipy = "^1.4.1"
antlr4-python3-runtime = "~4.8"
opencv-python = "^4.2.0"
numpy = "^1.18.2"
pillow = "^7.1.1"
pynverse = "^0.1.4"

pyproj = {version = "^2.6.0", optional = true}

pytest-randomly = {version = "^3.2.1", optional = true}
pytest = {version = "^5.4.1", optional = true}
sphinx = {version = "^3.0.0", optional = true}
tox = {version = "^3.14.0", optional = true}
sphinx_rtd_theme = {version = "^0.4.3", optional = true}

[tool.poetry.extras]
guideways = ["pyproj"]
dev = [
	"scenic[test-full]",
	"black ~= 23.0",
	"inflect ~= 5.5",
	"isort ~= 5.11",
	"pre-commit ~= 3.0",
	"pytest-cov >= 3.0.0",
	"sphinx >= 5.0.0, <6",
	"sphinx_rtd_theme >= 0.5.2",
	"sphinx-tabs ~= 3.4.1",
	"tox ~= 3.14",
]

[project.urls]
Repository = "https://github.com/BerkeleyLearnVerify/Scenic"
Documentation = "https://scenic-lang.readthedocs.io"

[project.scripts]
scenic = 'scenic.__main__:dummy'

[project.entry-points."pygments.lexers"]
scenic = "scenic.syntax.pygment:ScenicLexer"

[project.entry-points."pygments.styles"]
scenic = "scenic.syntax.pygment:ScenicStyle"

[build-system]
requires = ["flit_core >= 3.2, <4"]
build-backend = "flit_core.buildapi"

[tool.black]
line-length = 90
force-exclude = '''
^/src/scenic/syntax/parser\.py
| ^/src/scenic/simulators/webots/WBT.*
| ^/tests/syntax/polychrome.*
'''

[tool.isort]
profile = "black"
line_length = 90
combine_as_imports = "true"
force_sort_within_sections = "true"
treat_all_comments_as_code = "true"
skip_gitignore = "true"
extend_skip_glob = [
	"src/scenic/simulators/webots/WBT.*",
	"tests/syntax/polychrome.*",
]

[tool.pytest.ini_options]
norecursedirs = ["examples"]
